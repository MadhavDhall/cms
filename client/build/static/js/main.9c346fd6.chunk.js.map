{"version":3,"sources":["photos/form.png","components/functions/check.js","components/Form.jsx","components/Login.jsx","components/NotFound.jsx","components/Footer.jsx","components/setup/1.jsx","components/setup/2.jsx","components/Header.jsx","components/Admin.jsx","components/AddAdmin.jsx","components/ForgotPass.jsx","components/ChangePass.jsx","components/Profile.jsx","components/Admins.jsx","App.js","reportWebVitals.js","index.js"],"names":["Check","props","history","useHistory","useEffect","a","fetch","url","req","json","res","console","log","success","push","redirect","toast","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","sendReq","Form","name","value","inputs","data","setData","submit","submitValue","changeValue","e","target","method","onSubmit","className","map","input","key","type","placeholder","icon","onChange","required","id","autoComplete","htmlFor","Login","useContext","AdminContext","state","dispatch","useState","email","pass","formSubmit","preventDefault","headers","body","JSON","stringify","status","message","payload","src","Image","alt","to","NotFound","Footer","year","Date","getFullYear","Setup1","username","password","clusterurl","setTimeout","Setup2","wname","cpassword","sideNavLinks","path","SideNav","link","Header","adminData","setAdminData","Admin","setAdmindata","AddAdmin","window","confirm","ForgotPass","ChangePass","queryString","location","search","Profile","setName","changeName","reload","MainForm","setForm","changePassword","onClick","addForm","setAddForm","form","check","Admins","admins","adminsTable","setAdminsTable","table","owner","createContext","pages","component","reducer","action","App","useReducer","setAdmins","Provider","page","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c346fd6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/form.cc73cf26.png\";","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Check = (props) => {\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const sendReq = async () => {\r\n            try {\r\n                const req = await fetch(`/cms-admin/${props.url}`)\r\n                const res = await req.json()\r\n\r\n                console.log(res);\r\n                return res.success ? \"\" : history.push(res.redirect)\r\n            } catch (error) {\r\n                // console.log(error);\r\n                toast.warn('Server is restarting. Refresh the page and try again.', {\r\n                    position: \"top-center\",\r\n                    autoClose: false,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        }\r\n        sendReq()\r\n    }, [history, props.url])\r\n    return (\r\n        <ToastContainer />\r\n    )\r\n}\r\nexport default Check","import React from \"react\"\r\n\r\nconst Form = (props) => {\r\n    const { inputs, data, setData, submit, submitValue } = props\r\n\r\n    let name, value\r\n    const changeValue = (e) => {\r\n        name = e.target.name\r\n        value = e.target.value\r\n\r\n        setData({ ...data, [name]: value })\r\n    }\r\n\r\n    return (\r\n        <form method=\"POST\" onSubmit={submit} className=\"col-12 col-md-6 d-flex flex-column justify-content-center\">\r\n            {inputs.map((input, key) => {\r\n                const { type, name, placeholder, icon } = input\r\n\r\n                return (\r\n                    <div className=\"input-field\" key={key}>\r\n                        <input value={data[name]} onChange={changeValue} required type={type} name={name} id={key} placeholder={placeholder} autoComplete=\"on\" />\r\n                        <label htmlFor={key} className={icon}></label>\r\n                    </div>\r\n                )\r\n            })\r\n            }\r\n            <input type=\"submit\" value={submitValue} className=\"btn btn-success\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form","import React, { useState, useContext } from 'react'\r\nimport Image from \"../photos/form.png\"\r\nimport Check from './functions/check'\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router';\r\nimport Form from './Form';\r\nimport { AdminContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n    const { state, dispatch } = useContext(AdminContext)\r\n    const history = useHistory()\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        pass: \"\"\r\n    })\r\n\r\n    const form = [\r\n        {\r\n            type: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"E-mail\",\r\n            icon: \"fas fa-envelope\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"pass\",\r\n            placeholder: \"Password\",\r\n            icon: \"fas fa-lock\"\r\n        }\r\n    ]\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const { email, pass } = data\r\n\r\n        setData({\r\n            email: \"\",\r\n            pass: \"\"\r\n        })\r\n\r\n        try {\r\n            const sendReq = await fetch(\"/cms-admin/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email, pass\r\n                })\r\n            })\r\n\r\n            const res = await sendReq.json()\r\n            console.log(res);\r\n\r\n            if (sendReq.status !== 200) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                dispatch({ type: \"changeAdmin\", payload: state + 1 })\r\n                history.push(\"/admin\")\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url=\"login\" />\r\n            <div className=\"center-box container\">\r\n                <div className=\"row box gy-3 p-3 p-md-3 p-lg-5\">\r\n                    <h2 className=\"text-center mb-4 m-0\">Madhav Dhall CMS Login</h2>\r\n\r\n                    <Form submit={formSubmit} submitValue=\"Login\" inputs={form} data={data} setData={setData} />\r\n\r\n                    <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                        <img src={Image} className=\"img-fluid\" alt=\"Login\" />\r\n                    </figure>\r\n                    <Link to=\"/admin/forgot-password\" className=\"my-0\">Forgot Password</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            Not Found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const year = new Date().getFullYear()\r\n    return (\r\n        <footer>\r\n            &#169; {year} Madhav Dhall\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport Image from \"../../photos/form.png\"\r\nimport { useHistory } from 'react-router';\r\nimport Check from './../functions/check';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport Form from '../Form';\r\n\r\nconst Setup1 = () => {\r\n    const history = useHistory()\r\n\r\n    const form = [\r\n        {\r\n            type: \"text\",\r\n            name: \"username\",\r\n            placeholder: \"User Name\",\r\n            icon: \"fa fa-user\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Password\",\r\n            icon: \"fas fa-lock\"\r\n        },\r\n        {\r\n            type: \"text\",\r\n            name: \"clusterurl\",\r\n            placeholder: \"Cluster URL\",\r\n            icon: \"fas fa-server\"\r\n        }\r\n    ]\r\n\r\n    const [data, setData] = useState({\r\n        username: \"\",\r\n        password: \"\",\r\n        clusterurl: \"\"\r\n    })\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const { username, password, clusterurl } = data\r\n\r\n        setData({\r\n            username: \"\",\r\n            password: \"\",\r\n            clusterurl: \"\"\r\n        })\r\n        try {\r\n            const sendReq = await fetch(\"/cms-admin/setup/1\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    username, password, clusterurl\r\n                })\r\n            })\r\n            const res = await sendReq.json()\r\n\r\n            if (sendReq.status !== 201) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.success('Connection successful. Wait till you are redirected to next setup page.', {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    history.push(\"/admin/setup/2\")\r\n                }, 5000)\r\n            }\r\n\r\n        } catch (error) {\r\n            toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url=\"setup/1\" />\r\n            <div className=\"center-box container\">\r\n                <div className=\"row box gy-3 p-2 p-md-3 p-lg-5\">\r\n                    <h2 className=\"text-center mb-4 m-0\">Madhav Dhall CMS Setup (Step 1/2)</h2>\r\n                    <h3 className=\"m-0\">Database Details</h3>\r\n                    <h6>**MongoDB Database Required</h6>\r\n\r\n                    <Form submit={formSubmit} submitValue=\"Next\" inputs={form} data={data} setData={setData} />\r\n\r\n                    <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                        <img src={Image} className=\"img-fluid\" alt=\"Setup\" />\r\n                    </figure>\r\n                </div>\r\n\r\n                <h5>Note- If you experience continuous redirect after submitting form or in any process during setup, its not due an error or problem and no need to panic and just wait till it redirects to next form. It happens due to slow server restarting process.</h5><br />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Setup1\r\n","import React, { useState } from 'react'\r\nimport Image from \"../../photos/form.png\"\r\nimport { useHistory } from 'react-router';\r\nimport Check from '../functions/check';\r\nimport { toast } from 'react-toastify';\r\nimport Form from '../Form';\r\n\r\nconst Setup2 = () => {\r\n    const form = [\r\n        {\r\n            type: \"text\",\r\n            name: \"wname\",\r\n            placeholder: \"Website Name\",\r\n            icon: \"fas fa-window-maximize\"\r\n        },\r\n        {\r\n            type: \"text\",\r\n            name: \"name\",\r\n            placeholder: \"Owner Name\",\r\n            icon: \"fa fa-user\"\r\n        },\r\n        {\r\n            type: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"Owner E-mail\",\r\n            icon: \"fas fa-envelope\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Owner Password\",\r\n            icon: \"fas fa-lock\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"cpassword\",\r\n            placeholder: \"Confirm Owner Password\",\r\n            icon: \"fas fa-lock\"\r\n        }\r\n    ]\r\n\r\n    const history = useHistory()\r\n\r\n    const [data, setData] = useState({\r\n        wname: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        cpassword: \"\"\r\n    })\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const { wname, email, name, password, cpassword } = data\r\n        \r\n        if(password === cpassword){\r\n        setData({\r\n            wname: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            cpassword: \"\"\r\n        })\r\n        try {\r\n            const sendReq = await fetch(\"/cms-admin/setup/2\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    wname, email, name, password\r\n                })\r\n            })\r\n            const res = await sendReq.json()\r\n\r\n            if (sendReq.status !== 201) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.success(\"Click on the link sent on E-mail given to verify.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    history.push(\"/admin/setup/2\")\r\n                }, 5000)\r\n            }\r\n\r\n        } catch (error) {\r\n            toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }else{\r\n        setData({\r\n            ...data,\r\n            cpassword: \"\"\r\n        })\r\n        toast.warn(\"Both passwords must match\", {\r\n            position: \"top-center\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Check url=\"setup/2\"/>\r\n        <div className=\"center-box container\">\r\n            <div className=\"row box gy-3 p-2 p-md-3 p-lg-5\">\r\n                <h2 className=\"text-center mb-4 m-0\">Madhav Dhall CMS Setup(2/2)</h2>\r\n\r\n                <Form submit={formSubmit} submitValue=\"Set CMS\" inputs={form} data={data} setData={setData} />\r\n\r\n                <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                    <img src={Image} className=\"img-fluid\" alt=\"Register\" />\r\n                </figure>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Setup2","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport Logo from \"../photos/logo.png\"\r\nimport { AdminContext } from './../App';\r\n\r\nconst Header2 = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-md navbar-dark\">\r\n            <div className=\"container\">\r\n                <NavLink className=\"navbar-brand\" to=\"/admin/login\">\r\n                    <img src={Logo} alt=\"Logo\" className=\"logo\" />\r\n                </NavLink>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ms-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/admin/login\" activeClassName=\"active\" className=\"nav-link\">Home</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst sideNavLinks = [\r\n    {\r\n        name: \"Dashboard\",\r\n        path: \"\"\r\n    },\r\n    {\r\n        name: \"My Profile\",\r\n        path: \"profile\"\r\n    },\r\n    {\r\n        name: \"Admins\",\r\n        path: \"admins\"\r\n    }\r\n]\r\n\r\nconst SideNav = () => {\r\n    return (\r\n        <div className=\"col-8 col-sm-6 d-none d-md-block col-md-3 col-lg-3 col-xl-1 sidenav theme\">\r\n            <ul>\r\n                {\r\n                    sideNavLinks.map((link, key) => {\r\n                        return (\r\n                            <li key={key}>\r\n                                <Link to={`/admin/${link.path}`}>{link.name}</Link>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Header = () => {\r\n    const [adminData, setAdminData] = useState({ name: \"\", email: \"\" })\r\n\r\n    const { data } = useContext(AdminContext)\r\n    useEffect(() => {\r\n        setAdminData({ name: data.name, email: data.email })\r\n    }, [data])\r\n    return (\r\n        <>\r\n            <div className=\"theme d-flex flex-column header\">\r\n\r\n                <div className=\"ms-auto\">\r\n                    <Link to=\"/admin/profile\" className=\"fas fa-user-circle text-light text-decoration-none\">&nbsp;{adminData.name}</Link>&nbsp;\r\n            <Link to=\"/admin/logout\" className=\"fas fa-sign-out-alt text-danger text-decoration-none\"></Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\nexport { SideNav }","import React, { useContext, useState, useEffect } from 'react'\r\nimport Header, { SideNav } from './Header.jsx';\r\nimport { AdminContext } from './../App';\r\nimport Check from './functions/check.js';\r\n\r\nconst Admin2 = () => {\r\n    const [state, dispatch, data] = useContext(AdminContext)\r\n    console.log(data);\r\n    // const [data, setData] = useState({})\r\n    // const history = useHistory()\r\n\r\n    // useEffect(() => {\r\n    //     const check = async () => {\r\n    //         try {\r\n    //             const req = await fetch(\"/cms-admin\")\r\n    //             const res = await req.json()\r\n\r\n    //             return res.success ? setData(res.data) : history.push(res.redirect)\r\n    //         } catch (error) {\r\n    //             toast.warn('Server is restarting. Refresh the page and try again.', {\r\n    //                 position: \"top-center\",\r\n    //                 autoClose: false,\r\n    //                 hideProgressBar: false,\r\n    //                 closeOnClick: true,\r\n    //                 pauseOnHover: true,\r\n    //                 draggable: true,\r\n    //                 progress: undefined,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    //     check()\r\n    // }, [])\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"main col\">\r\n                        <h1>Admin </h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nconst Admin = () => {\r\n    const { data } = useContext(AdminContext)\r\n    const [adminData, setAdmindata] = useState({\r\n        name: \"\",\r\n        email: \"\"\r\n    })\r\n    useEffect(() => {\r\n        setAdmindata({ name: data.name, email: data.email })\r\n    }, [data])\r\n    return (\r\n        <>\r\n            <Check url=\"\" />\r\n            <Header />\r\n\r\n            <section className=\"admin\">\r\n                <SideNav />\r\n                <div>Madhav</div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admin","import React, { useState } from 'react'\r\nimport Check from './functions/check'\r\nimport Form from './Form.jsx';\r\nimport Image from \"../photos/form.png\"\r\n\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AddAdmin = () => {\r\n    const history= useHistory()\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        cpassword: \"\"\r\n    })\r\n    const form = [\r\n        {\r\n            type: \"text\",\r\n            name: \"name\",\r\n            placeholder: \"Name\",\r\n            icon: \"fa fa-user\"\r\n        },\r\n        {\r\n            type: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"E-mail\",\r\n            icon: \"fas fa-envelope\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Password\",\r\n            icon: \"fas fa-lock\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"cpassword\",\r\n            placeholder: \"Confirm Password\",\r\n            icon: \"fas fa-lock\"\r\n        }\r\n    ]\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, email, password, cpassword } = data\r\n        if (cpassword === password) {\r\n            setData({\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                cpassword: \"\"\r\n            })\r\n\r\n            try {\r\n                const req = await fetch(\"/cms-admin/add-admin\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name, email, password\r\n                    })\r\n                })\r\n                const res = await req.json()\r\n\r\n                if (res.status !== 201) {\r\n                    toast.warn(res.message, {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                } else {\r\n                    const c = window.confirm(res.message)\r\n                    c ? history.push(\"/admin/login\") : history.push(\"/admin/login\")\r\n                }\r\n            } catch (e) {\r\n                toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } else {\r\n            toast.warn(\"Passwords must match.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setData({\r\n                ...data,\r\n                cpassword: \"\"\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url=\"add-admin\" />\r\n            <div className=\"center-box container\">\r\n                <div className=\"row box gy-3 p-2 p-md-3 p-lg-5\">\r\n                    <h2 className=\"text-center mb-4 m-0\">Add Admin</h2>\r\n\r\n                    <Form submit={formSubmit} submitValue=\"Add Admin\" inputs={form} data={data} setData={setData} />\r\n\r\n                    <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                        <img src={Image} className=\"img-fluid\" alt=\"Add admin\" />\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddAdmin\r\n","import React, { useState } from 'react'\r\nimport Form from './Form';\r\nimport { toast } from 'react-toastify';\r\nimport Check from './functions/check';\r\nimport Image from '../photos/form.png';\r\n\r\nconst ForgotPass = () => {\r\n    const form = [\r\n        {\r\n            type: \"email\",\r\n            placeholder: \"Your E-mail\",\r\n            name: \"email\",\r\n            icon: \"fas fa-envelope\"\r\n        }\r\n    ]\r\n    const [data, setData] = useState({\r\n        email: \"\"\r\n    })\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const { email } = data\r\n        setData({\r\n            email: \"\"\r\n        })\r\n        try {\r\n            const req = await fetch(\"/cms-admin/forgot-password\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    email\r\n                })\r\n            })\r\n            const res = await req.json()\r\n\r\n            if (res.status !== 200) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.success(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url=\"forgot-password\" />\r\n            <div className=\"center-box container\">\r\n                <div className=\"row box gy-3 p-2 p-md-3 p-lg-5\">\r\n                    <h2 className=\"text-center mb-4 m-0\">Forgot Password</h2>\r\n\r\n                    <Form submit={formSubmit} submitValue=\"Reset Password\" inputs={form} data={data} setData={setData} />\r\n\r\n                    <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                        <img src={Image} className=\"img-fluid\" alt=\"Forgot Password\" />\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ForgotPass\r\n","import React, { useState } from 'react'\r\nimport Form from './Form';\r\nimport Check from './functions/check';\r\nimport Image from \"../photos/form.png\"\r\nimport { toast } from 'react-toastify';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst ChangePass = () => {\r\n    const queryString = window.location.search;\r\n\r\n    const history = useHistory()\r\n    const form = [\r\n        {\r\n            type: \"password\",\r\n            placeholder: \"New Password\",\r\n            name: \"password\",\r\n            icon: \"fas fa-lock\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            placeholder: \"Confirm New Password\",\r\n            name: \"cpassword\",\r\n            icon: \"fas fa-lock\"\r\n        }\r\n    ]\r\n    const [data, setData] = useState({\r\n        password: \"\",\r\n        cpassword: \"\"\r\n    })\r\n\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n        const { password, cpassword } = data\r\n        if (cpassword === password) {\r\n            try {\r\n                const req = await fetch(`/cms-admin/change-password${queryString}`, {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({ password })\r\n                })\r\n                const res = await req.json()\r\n\r\n                if (req.status !== 201) {\r\n                    toast.warn(res.message, {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                } else {\r\n                    const c = window.confirm(\"Password changed successfully.\")\r\n\r\n                    c ? history.push(\"/admin/login\") : history.push(\"/admin/login\")\r\n                }\r\n            } catch (error) {\r\n                toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                cpassword: \"\"\r\n            })\r\n            toast.warn(\"Both passwords must match\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url={`change-password${queryString}`} />\r\n            <div className=\"center-box container\">\r\n                <div className=\"row box gy-3 p-2 p-md-3 p-lg-5\">\r\n                    <h2 className=\"text-center mb-4 m-0\">Change Password</h2>\r\n\r\n                    <Form submit={formSubmit} submitValue=\"Change Password\" inputs={form} data={data} setData={setData} />\r\n\r\n                    <figure className=\"col-12 m-auto col-md-5 col-lg-5 col-xl-5\">\r\n                        <img src={Image} className=\"img-fluid\" alt=\"Forgot Password\" />\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChangePass","import React, { useContext, useState, useEffect } from 'react'\r\nimport { AdminContext } from '../App'\r\nimport Check from './functions/check'\r\nimport Header, { SideNav } from './Header'\r\nimport Form from './Form';\r\nimport { toast } from 'react-toastify';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = () => {\r\n    const { data } = useContext(AdminContext)\r\n    const [adminData, setAdminData] = useState(data)\r\n\r\n    const inputs = [\r\n        {\r\n            type: \"text\",\r\n            placeholder: \"Your Name\",\r\n            name: \"name\",\r\n            icon: \"fa fa-user\"\r\n        }\r\n    ]\r\n\r\n    const [name, setName] = useState({ name: adminData.name })\r\n\r\n    const changeName = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            const req = await fetch(\"/cms-admin/change-name\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({ name: name.name })\r\n            })\r\n            const res = await req.json()\r\n            if (req.status !== 201) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: false,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.success(\"Name changed successfully.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: false,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n                setTimeout(() => {\r\n                    window.location.reload()\r\n                }, 2000)\r\n            }\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    const [MainForm, setForm] = useState(<Form inputs={inputs} data={name} setData={setName} submit={changeName} submitValue=\"Change Nam\" />)\r\n\r\n    useEffect(() => {\r\n        setAdminData(data)\r\n        setName({ name: data.name })\r\n    }, [data])\r\n\r\n    useEffect(() => {\r\n        setForm(<Form inputs={inputs} data={name} setData={setName} submit={changeName} submitValue=\"Change Name\" />)\r\n    }, [name])\r\n\r\n    const changePassword = async () => {\r\n        try {\r\n            const req = await fetch(\"/cms-admin/forgot-password\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\"\r\n                    },\r\n                    body: JSON.stringify({ email: adminData.email })\r\n                })\r\n\r\n            const res = await req.json()\r\n            if (req.status !== 201) {\r\n                toast.warn(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: false,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            } else {\r\n                toast.success(res.message, {\r\n                    position: \"top-center\",\r\n                    autoClose: false,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            toast.warn('Server is restarting. Refresh the page and try again.', {\r\n                position: \"top-center\",\r\n                autoClose: false,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Check url=\"\" />\r\n            <Header />\r\n            <div className=\"admin\">\r\n                <SideNav />\r\n                <div className=\"col container my-3\">\r\n                    <h1>Your Profile</h1><br />\r\n                    <h5>Email: {adminData.email}</h5>\r\n                    <h5>Name: {adminData.name}</h5><br />\r\n\r\n                    {MainForm}<br />\r\n\r\n                    <button onClick={changePassword} className=\"btn btn-outline-secondary\">Change Password</button>\r\n\r\n                    <br /><br /><br/>\r\n                    <Link to=\"/admin/logoutall\" className=\"btn btn-danger mt-auto\">Logout from all devices</Link>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile","import React, { useContext, useEffect, useState } from 'react'\r\nimport Check from './functions/check'\r\nimport Header, { SideNav } from './Header'\r\nimport { AdminContext } from './../App';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport Form from './Form';\r\n\r\nconst AddAdmin = () => {\r\n    const [addForm, setAddForm] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const check = async () => {\r\n            try {\r\n                const req = await fetch('/cms-admin/add-admin')\r\n                const res = await req.json()\r\n\r\n                if (res.success) {\r\n                    setAddForm(<>\r\n                        <h2>Add Admin</h2><br />\r\n                        <Form submit={formSubmit} submitValue=\"Add Admin\" inputs={form} data={data} setData={setData} />\r\n                    </>)\r\n                }\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        check()\r\n    }, [])\r\n\r\n    const history = useHistory()\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        cpassword: \"\"\r\n    })\r\n    const form = [\r\n        {\r\n            type: \"text\",\r\n            name: \"name\",\r\n            placeholder: \"Name\",\r\n            icon: \"fa fa-user\"\r\n        },\r\n        {\r\n            type: \"email\",\r\n            name: \"email\",\r\n            placeholder: \"E-mail\",\r\n            icon: \"fas fa-envelope\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"password\",\r\n            placeholder: \"Password\",\r\n            icon: \"fas fa-lock\"\r\n        },\r\n        {\r\n            type: \"password\",\r\n            name: \"cpassword\",\r\n            placeholder: \"Confirm Password\",\r\n            icon: \"fas fa-lock\"\r\n        }\r\n    ]\r\n    const formSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const { name, email, password, cpassword } = data\r\n        if (cpassword === password) {\r\n            setData({\r\n                name: \"\",\r\n                email: \"\",\r\n                password: \"\",\r\n                cpassword: \"\"\r\n            })\r\n\r\n            try {\r\n                const req = await fetch(\"/cms-admin/add-admin\", {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify({\r\n                        name, email, password\r\n                    })\r\n                })\r\n                const res = await req.json()\r\n\r\n                if (res.status !== 201) {\r\n                    toast.warn(res.message, {\r\n                        position: \"top-center\",\r\n                        autoClose: 5000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                    });\r\n                } else {\r\n                    const c = window.confirm(res.message)\r\n                    c ? history.push(\"/admin/login\") : history.push(\"/admin/login\")\r\n                }\r\n            } catch (e) {\r\n                toast.warn(\"Server is restarting. Refresh the page and try again.\", {\r\n                    position: \"top-center\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                });\r\n            }\r\n        } else {\r\n            toast.warn(\"Passwords must match.\", {\r\n                position: \"top-center\",\r\n                autoClose: 5000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n            });\r\n            setData({\r\n                ...data,\r\n                cpassword: \"\"\r\n            })\r\n        }\r\n    }\r\n    return addForm\r\n}\r\n\r\nconst Admins = () => {\r\n    const { admins } = useContext(AdminContext)\r\n    const [adminsTable, setAdminsTable] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        const table = admins.map((admins, key) => {\r\n            return (\r\n                <tr key={key}>\r\n                    <td>{++key}</td>\r\n                    <td>{admins.name} <b>{admins.owner ? \"(Owner)\" : \"\"}</b></td>\r\n                    <td>{admins.email}</td>\r\n                </tr>\r\n            )\r\n        })\r\n\r\n        setAdminsTable(\r\n            <div className=\"scrollable\">\r\n                <table className=\"table table-striped table-hover table-light\">\r\n                    <thead className=\"table-primary\">\r\n                        <tr>\r\n                            <th>No.</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {table}\r\n                    </tbody>\r\n                </table>\r\n            </div>)\r\n    }, [admins])\r\n    return (\r\n        <>\r\n            <Check url=\"\" />\r\n            <Header />\r\n\r\n            <div className=\"admin\">\r\n                <SideNav />\r\n                <div className=\"col container my-3\">\r\n                    {adminsTable} <br />\r\n\r\n                    <AddAdmin />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Admins\r\n","import React, { createContext, useState, useEffect, useReducer } from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Login from './components/Login';\nimport NotFound from './components/NotFound';\nimport Footer from './components/Footer';\nimport Setup1 from './components/setup/1.jsx';\nimport Setup2 from './components/setup/2.jsx';\nimport Admin from './components/Admin.jsx';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport AddAdmin from './components/AddAdmin.jsx';\nimport ForgotPass from './components/ForgotPass';\nimport ChangePass from './components/ChangePass';\nimport Profile from './components/Profile';\nimport Check from './components/functions/check';\nimport Admins from './components/Admins.jsx';\n\nexport const AdminContext = createContext()\nconst pages = [\n  {\n    path: \"\",\n    component: <Admin />\n  },\n  {\n    path: \"setup\",\n    component: <Check url=\"setup\" />\n  },\n  {\n    path: \"setup/1\",\n    component: <Setup1 />\n  },\n  {\n    path: \"setup/2\",\n    component: <Setup2 />\n  },\n  {\n    path: \"login\",\n    component: <Login />\n  },\n  {\n    path: \"logout\",\n    component: <Check url=\"/logout\" />\n  },\n  {\n    path: \"logoutall\",\n    component: <Check url=\"/logoutall\" />\n  },\n  {\n    path: \"add-admin\",\n    component: <AddAdmin />\n  },\n  {\n    path: \"forgot-password\",\n    component: <ForgotPass />\n  },\n  {\n    path: \"change-password\",\n    component: <ChangePass />\n  },\n  {\n    path: \"profile\",\n    component: <Profile />\n  },\n  {\n    path: \"admins\",\n    component: <Admins />\n  }\n]\n\nconst reducer = (state, action) => {\n  if (action.type === \"changeAdmin\") {\n    return action.payload\n  }\n  return state\n}\n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, 0)\n  const [data, setData] = useState({ name: \"\", email: \"\" })\n  const [admins, setAdmins] = useState([])\n\n  useEffect(() => {\n    const check = async () => {\n      try {\n        const req = await fetch(\"/cms-admin\")\n        const res = await req.json()\n\n        if (res.success) {\n          setData({ name: res.data.name, email: res.data.email })\n          setAdmins(res.admins)\n        }\n      } catch (error) {\n        toast.warn('Server is restarting. Refresh the page and try again.', {\n          position: \"top-center\",\n          autoClose: false,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    return check()\n  }, [state])\n  return (\n    <>\n      <ToastContainer />\n\n      <AdminContext.Provider value={{ state, dispatch, data, admins }}>\n        <Router>\n          <Switch>\n            {\n              pages.map((page, key) => {\n                return (\n                  <Route path={`/admin/${page.path}`} key={key} exact>\n                    {page.component}\n                  </Route>\n                )\n              })\n            }\n\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </Router>\n      </AdminContext.Provider>\n\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}